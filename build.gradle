buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
plugins {
    id 'com.diffplug.gradle.spotless' version '3.4.0'
    id "com.github.johnrengelman.shadow" version "2.0.4"
}
apply plugin: 'net.minecraftforge.gradle.forge'

version = "${mod_version}"
group = "com.wurmcraft.serveressentials"
archivesBaseName = "ServerEssentials"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"
    mappings = "${mcp_map}"
    replace "@version@", project.version
    replaceIn "Global.java"
    clientRunArgs += "--username=${username}"
}

repositories {}

dependencies {
    compile group: 'com.github.stephenc.high-scale-lib', name: 'high-scale-lib', version: '1.1.4'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

spotless {
    java {
        removeUnusedImports()
        indentWithSpaces()
        trimTrailingWhitespace()
        endWithNewline()
        googleJavaFormat()
    }
}

shadowJar {
    dependencies {
        exclude('dummy*')
        include(dependency('com.github.stephenc.high-scale-lib:high-scale-lib:1.1.4'))
        exclude('FTB*.jar')
    }
}

reobf {
    shadowJar {}
}

defaultTasks 'buildAndPackage'
shadowJar.archiveName = "${archivesBaseName}-${version}.jar"

task buildAndPackage(dependsOn: build, type: Zip) {
    dependsOn 'clean'
    dependsOn 'spotlessApply'
    dependsOn 'build'
    tasks.findByName('build').mustRunAfter 'clean'
    from 'rest/'
    include '*.js'
    include 'keys'
    include '*.json'
    archiveName 'Rest.zip'
    destinationDir(file('build/libs/'))
}